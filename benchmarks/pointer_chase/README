`pointer_generator.c`

creates a list of disk pointers with 3 tuples and writes them to dp.dat (diskpointer.dat)
@parm: num_lists
@parm: max_list_length, @parm:min_list_length
:pointer lists are randomly generated but limited by max and min list length

eg.
source_block	destination_block	list_length
65	45	2
45	22	1
22	96	0

this shows a list of 3 pointer blocks, where block head - 65 points to block 45, and the 
next two records store the remaining linked list of blocks.

`write_pointer_to_disk.c`

writes blocks to the underlying device with pointers generated by the pointer_generator.
each blocks' pointer is stored at offset 0 in each disk block.

`host_pointer_reader.c`

a program that runs at the host (inside the guest VM) and repeatedly issues read requests
for blocks to the underlying disk. it reads all pointer "heads" from dp.dat and
reads these blocks, and chases the pointers stored in each block until no more pointers are
present.

`nsc_pointer_reader.c`
issues read to the head of the linked list (inside the guest VM) and receives the tail of
the linked list. This requires compute_mode=1 and hardcoded values in NSC Process.
